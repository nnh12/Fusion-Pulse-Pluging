import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DocumentEditorModule } from './documenteditor.module';
import { Print, SfdtExport, WordExport, TextExport, Selection, Search, Editor, EditorHistory, OptionsPane, ContextMenu, ImageResizer, HyperlinkDialog, TableDialog, BookmarkDialog, TableOfContentsDialog, PageSetupDialog, ParagraphDialog, ListDialog, StyleDialog, StylesDialog, BulletsAndNumberingDialog, FontDialog, TablePropertiesDialog, BordersAndShadingDialog, TableOptionsDialog, CellOptionsDialog, SpellChecker, SpellCheckDialog, CollaborativeEditing, ColumnsDialog } from '@syncfusion/ej2-documenteditor';
import * as i0 from "@angular/core";
export const PrintService = { provide: 'DocumentEditorPrint', useValue: Print };
export const SfdtExportService = { provide: 'DocumentEditorSfdtExport', useValue: SfdtExport };
export const WordExportService = { provide: 'DocumentEditorWordExport', useValue: WordExport };
export const TextExportService = { provide: 'DocumentEditorTextExport', useValue: TextExport };
export const SelectionService = { provide: 'DocumentEditorSelection', useValue: Selection };
export const SearchService = { provide: 'DocumentEditorSearch', useValue: Search };
export const EditorService = { provide: 'DocumentEditorEditor', useValue: Editor };
export const EditorHistoryService = { provide: 'DocumentEditorEditorHistory', useValue: EditorHistory };
export const OptionsPaneService = { provide: 'DocumentEditorOptionsPane', useValue: OptionsPane };
export const ContextMenuService = { provide: 'DocumentEditorContextMenu', useValue: ContextMenu };
export const ImageResizerService = { provide: 'DocumentEditorImageResizer', useValue: ImageResizer };
export const HyperlinkDialogService = { provide: 'DocumentEditorHyperlinkDialog', useValue: HyperlinkDialog };
export const TableDialogService = { provide: 'DocumentEditorTableDialog', useValue: TableDialog };
export const BookmarkDialogService = { provide: 'DocumentEditorBookmarkDialog', useValue: BookmarkDialog };
export const TableOfContentsDialogService = { provide: 'DocumentEditorTableOfContentsDialog', useValue: TableOfContentsDialog };
export const PageSetupDialogService = { provide: 'DocumentEditorPageSetupDialog', useValue: PageSetupDialog };
export const ParagraphDialogService = { provide: 'DocumentEditorParagraphDialog', useValue: ParagraphDialog };
export const ListDialogService = { provide: 'DocumentEditorListDialog', useValue: ListDialog };
export const StyleDialogService = { provide: 'DocumentEditorStyleDialog', useValue: StyleDialog };
export const StylesDialogService = { provide: 'DocumentEditorStylesDialog', useValue: StylesDialog };
export const BulletsAndNumberingDialogService = { provide: 'DocumentEditorBulletsAndNumberingDialog', useValue: BulletsAndNumberingDialog };
export const FontDialogService = { provide: 'DocumentEditorFontDialog', useValue: FontDialog };
export const TablePropertiesDialogService = { provide: 'DocumentEditorTablePropertiesDialog', useValue: TablePropertiesDialog };
export const BordersAndShadingDialogService = { provide: 'DocumentEditorBordersAndShadingDialog', useValue: BordersAndShadingDialog };
export const TableOptionsDialogService = { provide: 'DocumentEditorTableOptionsDialog', useValue: TableOptionsDialog };
export const CellOptionsDialogService = { provide: 'DocumentEditorCellOptionsDialog', useValue: CellOptionsDialog };
export const SpellCheckerService = { provide: 'DocumentEditorSpellChecker', useValue: SpellChecker };
export const SpellCheckDialogService = { provide: 'DocumentEditorSpellCheckDialog', useValue: SpellCheckDialog };
export const CollaborativeEditingService = { provide: 'DocumentEditorCollaborativeEditing', useValue: CollaborativeEditing };
export const ColumnsDialogService = { provide: 'DocumentEditorColumnsDialog', useValue: ColumnsDialog };
/**
 * NgModule definition for the DocumentEditor component with providers.
 */
export class DocumentEditorAllModule {
}
DocumentEditorAllModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DocumentEditorAllModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DocumentEditorAllModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DocumentEditorAllModule, imports: [CommonModule, DocumentEditorModule], exports: [DocumentEditorModule] });
DocumentEditorAllModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DocumentEditorAllModule, providers: [
        PrintService,
        SfdtExportService,
        WordExportService,
        TextExportService,
        SelectionService,
        SearchService,
        EditorService,
        EditorHistoryService,
        OptionsPaneService,
        ContextMenuService,
        ImageResizerService,
        HyperlinkDialogService,
        TableDialogService,
        BookmarkDialogService,
        TableOfContentsDialogService,
        PageSetupDialogService,
        ParagraphDialogService,
        ListDialogService,
        StyleDialogService,
        StylesDialogService,
        BulletsAndNumberingDialogService,
        FontDialogService,
        TablePropertiesDialogService,
        BordersAndShadingDialogService,
        TableOptionsDialogService,
        CellOptionsDialogService,
        SpellCheckerService,
        SpellCheckDialogService,
        CollaborativeEditingService,
        ColumnsDialogService
    ], imports: [[CommonModule, DocumentEditorModule], DocumentEditorModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: DocumentEditorAllModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule, DocumentEditorModule],
                    exports: [
                        DocumentEditorModule
                    ],
                    providers: [
                        PrintService,
                        SfdtExportService,
                        WordExportService,
                        TextExportService,
                        SelectionService,
                        SearchService,
                        EditorService,
                        EditorHistoryService,
                        OptionsPaneService,
                        ContextMenuService,
                        ImageResizerService,
                        HyperlinkDialogService,
                        TableDialogService,
                        BookmarkDialogService,
                        TableOfContentsDialogService,
                        PageSetupDialogService,
                        ParagraphDialogService,
                        ListDialogService,
                        StyleDialogService,
                        StylesDialogService,
                        BulletsAndNumberingDialogService,
                        FontDialogService,
                        TablePropertiesDialogService,
                        BordersAndShadingDialogService,
                        TableOptionsDialogService,
                        CellOptionsDialogService,
                        SpellCheckerService,
                        SpellCheckDialogService,
                        CollaborativeEditingService,
                        ColumnsDialogService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,