{"ast":null,"code":"var _jsxFileName = \"/home/nnh12/webviewer-react-sample/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const viewer = useRef(null);\n\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    // If you prefer to use the Iframe implementation, you can replace this line with: WebViewer.Iframe(...)\n    WebViewer.WebComponent({\n      path: '/webviewer/lib',\n      initialDoc: '/files/PDFTRON_about.pdf',\n      licenseKey: 'your_license_key' // sign up to get a free trial key at https://dev.apryse.com\n    }, viewer.current).then(instance => {\n      const {\n        documentViewer,\n        annotationManager,\n        Annotations\n      } = instance.Core;\n      documentViewer.addEventListener('documentLoaded', () => {\n        const rectangleAnnot = new Annotations.RectangleAnnotation({\n          PageNumber: 1,\n          // values are in page coordinates with (0, 0) in the top left\n          X: 100,\n          Y: 150,\n          Width: 200,\n          Height: 50,\n          Author: annotationManager.getCurrentUser()\n        });\n        annotationManager.addAnnotation(rectangleAnnot);\n        // need to draw the annotation otherwise it won't show up until the page is refreshed\n        annotationManager.redrawAnnotation(rectangleAnnot);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: \"React sample\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webviewer\",\n      ref: viewer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y8sMazzoTWk8lnu56NnIw9A+doY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","WebViewer","jsxDEV","_jsxDEV","App","_s","viewer","WebComponent","path","initialDoc","licenseKey","current","then","instance","documentViewer","annotationManager","Annotations","Core","addEventListener","rectangleAnnot","RectangleAnnotation","PageNumber","X","Y","Width","Height","Author","getCurrentUser","addAnnotation","redrawAnnotation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/nnh12/webviewer-react-sample/src/App.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport WebViewer from '@pdftron/webviewer';\nimport './App.css';\n\nconst App = () => {\n  const viewer = useRef(null);\n\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    // If you prefer to use the Iframe implementation, you can replace this line with: WebViewer.Iframe(...)\n    WebViewer.WebComponent(\n      {\n        path: '/webviewer/lib',\n        initialDoc: '/files/PDFTRON_about.pdf',\n        licenseKey: 'your_license_key',  // sign up to get a free trial key at https://dev.apryse.com\n      },\n      viewer.current,\n    ).then((instance) => {\n      const { documentViewer, annotationManager, Annotations } = instance.Core;\n\n      documentViewer.addEventListener('documentLoaded', () => {\n        const rectangleAnnot = new Annotations.RectangleAnnotation({\n          PageNumber: 1,\n          // values are in page coordinates with (0, 0) in the top left\n          X: 100,\n          Y: 150,\n          Width: 200,\n          Height: 50,\n          Author: annotationManager.getCurrentUser()\n        });\n\n        annotationManager.addAnnotation(rectangleAnnot);\n        // need to draw the annotation otherwise it won't show up until the page is refreshed\n        annotationManager.redrawAnnotation(rectangleAnnot);\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">React sample</div>\n      <div className=\"webviewer\" ref={viewer}></div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,MAAM,GAAGP,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACAC,SAAS,CAAC,MAAM;IACd;IACAC,SAAS,CAACM,YAAY,CACpB;MACEC,IAAI,EAAE,gBAAgB;MACtBC,UAAU,EAAE,0BAA0B;MACtCC,UAAU,EAAE,kBAAkB,CAAG;IACnC,CAAC,EACDJ,MAAM,CAACK,OACT,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACnB,MAAM;QAAEC,cAAc;QAAEC,iBAAiB;QAAEC;MAAY,CAAC,GAAGH,QAAQ,CAACI,IAAI;MAExEH,cAAc,CAACI,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QACtD,MAAMC,cAAc,GAAG,IAAIH,WAAW,CAACI,mBAAmB,CAAC;UACzDC,UAAU,EAAE,CAAC;UACb;UACAC,CAAC,EAAE,GAAG;UACNC,CAAC,EAAE,GAAG;UACNC,KAAK,EAAE,GAAG;UACVC,MAAM,EAAE,EAAE;UACVC,MAAM,EAAEX,iBAAiB,CAACY,cAAc,CAAC;QAC3C,CAAC,CAAC;QAEFZ,iBAAiB,CAACa,aAAa,CAACT,cAAc,CAAC;QAC/C;QACAJ,iBAAiB,CAACc,gBAAgB,CAACV,cAAc,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAK2B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5B,OAAA;MAAK2B,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1ChC,OAAA;MAAK2B,SAAS,EAAC,WAAW;MAACM,GAAG,EAAE9B;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAxCID,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA0CT,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}